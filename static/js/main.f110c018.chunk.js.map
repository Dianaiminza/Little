{"version":3,"sources":["Components/Navbar.js","Components/Fruits.js","Components/storeItems.js","Components/GroceryCart.js","Components/Home.js","Components/Vegetables.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","class","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","to","tabindex","aria-disabled","Component","Fruits","items","onItemClick","handleClick","item","target","value","map","index","onClick","fruits","vegetables","GroceryCart","useState","cart","setCart","targetIndex","prev","filter","Home","props","count","page","rowsPerPage","onChangePage","TablePaginationActions","propTypes","PropTypes","number","isRequired","func","React","setPage","setRowsPerPage","Math","min","className","qs","location","search","p","TableHead","TableRow","TableCell","TableSortLabel","Data","console","log","slice","post","title","description","quantity","cost","data","TablePagination","pageNumber","event","parseInt","App","exact","path","component","Vegetables","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f110c018.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#Navbar\">Navbar</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n         <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <Link to=\"/fruits\">Fruits</Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n        <Link to=\"/vegetables\">Vegetables</Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled\" href=\"Groceries\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\n export default function Fruits({ items, onItemClick}) {\r\n      const handleClick = ({ target }) => {\r\n    const item = target.value;\r\n    onItemClick(item);\r\n  };\r\n     return (\r\n         <div>\r\n             {items.map((item, index) => (\r\n        <button value={item} onClick={handleClick} key={index}>\r\n          {item}\r\n        </button>\r\n      ))} \r\n         </div>\r\n     )\r\n }\r\n ","export const fruits = [\r\n  \"Mangoes\",\r\n  \"Oranges\",\r\n  \"Apples\",\r\n  \"Watermelon\",\r\n  \"Lime\",\r\n  \"Pineapple\",\r\n  \r\n  \"Avocados\",\r\n  \r\n  \"Bananas\",\r\n  \"Lemons\",\r\n  \r\n];\r\n\r\nexport const vegetables = [\r\n  \"Purple cabbage\",\r\n  \"Broccoli\",\r\n  \"Mushrooms\",\r\n   \"Ginger\",\r\n  \"Onions\",\r\n  \"Spinach\",\r\n  \"Kale\",\r\n  \"Tomatoes\",\r\n  \"Bell peppers\",\r\n  \"Carrots\",\r\n  \"Cucumbers\",\r\n\r\n  \r\n];","import React, { useState } from \"react\";\r\nimport Fruits from \"./Fruits\";\r\nimport { fruits } from \"./storeItems\";\r\n\r\nexport default function GroceryCart() {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addItem = (item) => {\r\n    setCart((prev) => {\r\n      return [item, ...prev];\r\n    });\r\n  };\r\n\r\n  const removeItem = (targetIndex) => {\r\n    setCart((prev) => {\r\n      return prev.filter((item, index) => index !== targetIndex);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Grocery Cart</h1>\r\n      <ul>\r\n        {cart.map((item, index) => (\r\n          <li onClick={() => removeItem(index)} key={index}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Fruits</h2>\r\n      <Fruits items={fruits} onItemClick={addItem} />\r\n      \r\n    </div>\r\n  );\r\n}","import React,{useState,useEffect}  from 'react'\r\nimport Data from '../grocery.json';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport {Link} from 'react-router-dom';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { TablePagination } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport * as qs from 'query-string';\r\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\r\n export default function Home (props) {\r\n     const {count,page,rowsPerPage,onChangePage}=props;\r\n     //const handleFirstPageButtonClick = (event) => {\r\n        //onChangePage(event, 0);\r\n     // };\r\n    \r\n      //const handleBackButtonClick = (event) => {\r\n        //onChangePage(event, page - 1);\r\n     // };\r\n    \r\n     // const handleNextButtonClick = (event) => {\r\n       // onChangePage(event, page + 1);\r\n      //};\r\n    \r\n     // const handleLastPageButtonClick = (event) => {\r\n        //onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n     // };\r\n      TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onChangePage: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n      };\r\n      \r\n      const [ setPage] = React.useState(0);\r\n      const [ setRowsPerPage] = React.useState(3);\r\n    \r\n      const emptyRows = rowsPerPage - Math.min(rowsPerPage, - page * rowsPerPage);\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      \r\nconst handleChangeRowsPerPage=(event)=>{\r\n    setRowsPerPage(parseInt(event.target.value),1)\r\n    setPage(0)\r\n\r\n}\r\nconst handlePageChange=(pageNumber)=>{\r\n    console.log(`active page is ${pageNumber}`);\r\n}\r\nconst fetchData=(limit,skip)=>{\r\n    fetch(`/api/users?limit=${limit}&skip=${skip}`)\r\n    .then((res)=>{\r\n        this.setState({\r\n            Data:res.data\r\n        })\r\n    })\r\n} \r\n\r\nconst filter = (Data) => {\r\n    const page = (qs.parse(props.location.search)).p\r\n    const itemPerPage = 4;\r\n    console.log(\"ITEMS\", Data.slice(page - 1, page + itemPerPage))\r\n    return Data.slice(page - 1, itemPerPage);\r\n    \r\n}\r\nconst[nextPage,previousPage]=useState(0);\r\nconst DataList=()=>{\r\n    const[Data,setData]=useState([]);\r\n    const[limit,setLimit]=useState(2);\r\n    const[skip,setSkip]=useState(0);\r\n\r\n\r\n    const nextPage=()=>{\r\n        setSkip(skip-limit)\r\n    }\r\n    useEffect(()=>{\r\n        fetchData(limit,skip)\r\n    }, [skip,limit])\r\n}\r\n        return (\r\n           \r\n            <div className=\"App\">\r\n     <div className=\"grocery\">\r\n     \r\n     \r\n     <div>\r\n            <h1 id='title'>{(qs.parse(props.location.search)).p}</h1>\r\n            \r\n            <table id='grocery'>\r\n            \r\n\r\n            <TableHead>\r\n            <thead\r\n\r\n\r\n\r\n            />\r\n            \r\n                <TableRow>\r\n\r\n                    <TableCell key=\"title\"><TableSortLabel \r\n                    \r\n                    >Title</TableSortLabel></TableCell>\r\n                    <TableCell key=\"description\"><TableSortLabel \r\n                    \r\n                    >Description</TableSortLabel></TableCell>\r\n                    <TableCell key=\"quantity\"><TableSortLabel \r\n                    >Quantity(Kg)</TableSortLabel></TableCell>\r\n                    <TableCell key=\"cost\"><TableSortLabel \r\n                    >Price (Ksh)</TableSortLabel></TableCell>\r\n                    \r\n                </TableRow>\r\n            </TableHead>\r\n               <tbody>\r\n               {\r\n                filter(Data).map(post=>{\r\n       return (\r\n        \r\n        <tr key={post.id}className=\"post\">\r\n        <td>{post.title}</td>\r\n        <td>{post.description}</td>\r\n        \r\n        <td>{post.quantity}</td>\r\n        <td>{post.cost}</td>\r\n          \r\n         </tr>    \r\n          \r\n)\r\n      \r\n      \r\n      })}\r\n\r\n           \r\n               </tbody>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        Data.map(data=>\r\n                        <div>\r\n                            <span>{Data.title}</span>\r\n                            <span>{Data.description}</span>\r\n                            <span>{Data.quantity}</span>\r\n                            <span>{Data.cost}</span>\r\n                        </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div>\r\n                    \r\n                </div>\r\n            </div>\r\n             \r\n             \r\n            </table>\r\n            <TablePagination>\r\n\r\n                rowsPerPageOtions={[3]}\r\n                colSpan={3}\r\n              \r\n                \r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handlePageChange}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                 itemsCountPerPage={3}\r\n                 totalItemsCount={11}\r\n                 pageRangeDisplayed={4}\r\n                 ActionsComponent={TablePaginationActions}\r\n                 \r\n            </TablePagination>\r\n            \r\n            <nav aria-label=\"Page navigation example\">\r\n            \r\n            <ul class=\"pagination\">\r\n              \r\n            <li class=\"page-item\"><Link  to =\"/?p=1\" className=\"page-link\" >1</Link></li>\r\n            <li class=\"page-item\"><Link  to =\"/?p=2\" className=\"page-link\">2</Link></li>\r\n            <li class=\"page-item\"><Link  to =\"/?p=3\" className=\"page-link\">3</Link></li>\r\n            <li class=\"page-item\"><Link  to =\"/?p=4\" className=\"page-link\">4</Link></li>\r\n            \r\n              \r\n            </ul>\r\n          \r\n          </nav>\r\n           \r\n            \r\n\r\n         </div>\r\n      \r\n      </div>\r\n         </div>\r\n    \r\n        );\r\n    }\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport Fruits from \"./Fruits\";\r\nimport { vegetables } from \"./storeItems\";\r\n\r\nexport default function GroceryCart() {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addItem = (item) => {\r\n    setCart((prev) => {\r\n      return [item, ...prev];\r\n    });\r\n  };\r\n\r\n  const removeItem = (targetIndex) => {\r\n    setCart((prev) => {\r\n      return prev.filter((item, index) => index !== targetIndex);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Grocery Cart</h1>\r\n      <ul>\r\n        {cart.map((item, index) => (\r\n          <li onClick={() => removeItem(index)} key={index}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Vegetables</h2>\r\n      <Fruits items={vegetables} onItemClick={addItem} />\r\n      \r\n    </div>\r\n  );\r\n}","import './App.css';\n\nimport Navbar from \"./Components/Navbar\";\n\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport GroceryCart from './Components/GroceryCart';\nimport Home from './Components/Home';\nimport Vegetables from './Components/Vegetables';\nfunction App() {\n  \n  return (\n\n    <div>\n    <Navbar/> \n     <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route  exact path=\"/fruits/\" component={GroceryCart} />\n        <Route  exact path=\"/vegetables/\" component={Vegetables} />\n        \n      \n      </Switch>\n         \n      \n      \n\n   </div>\n\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nReactDOM.render(\n  \n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}